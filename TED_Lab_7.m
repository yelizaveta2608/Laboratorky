clc
clear all
close all

%% %---- отображение входных данных ----

% --- Ввод данных
% ----- целевая функция -----
A=input('Введите коэфициент "A" функции цели, A='); % Пускай пользователь сам введет коэ-т цели А для функции цели. Используйте фразу: "'Введите коэфициент "A" функции цели, A='"
B=input('Введите коэфициент "В" функции цели, B='); % Пускай пользователь сам введет коэ-т цели В для функции цели. Используйте фразу: "'Введите коэфициент "B" функции цели, B='"
A=num2str(A);
B=num2str(B);
% ---- Визуализация введенной целевой функции ---
y_txt=['y=',A,'*x1+',B,'*x2']; % создайте одним вектором всё необходимое для вывода функции в command window (см. указания)
fprintf(y_txt)
% -------

% ----- Система уравнений ----
sys1=[2,1,20];
sys2=[1,3,18];
sys3=[0,1,5];
sys1_txt=[num2str(sys1(1,1)),'*x1+',num2str(sys1(1,2)),'*x2<=',num2str(sys1(1,3)),'; ']; % создайте одним вектором всё необходимое для вывода неравенства в command window.
sys2_txt=[num2str(sys2(1,1)),'*x1+',num2str(sys2(1,2)),'*x2<=',num2str(sys2(1,3)),'; ']; % создайте одним вектором всё необходимое для вывода неравенства в command window
sys3_txt=[num2str(sys3(1,1)),'*x1+',num2str(sys3(1,2)),'*x2<=',num2str(sys3(1,3)),'; ']; % создайте одним вектором всё необходимое для вывода неравенства в command window
fprintf('\nСистема неравенств:\n')
fprintf(sys1_txt);
fprintf(sys2_txt);
fprintf(sys3_txt);
% ---------------------------
% ---- конец ввода данных


% ---- Расчеты ----
% Одна из переменных системы приравняется нулю!

% для 1 неравенства:
x1_1=sys1(1,3)/sys1(1,1); % Определите 
x2_1=sys1(1,3)/sys1(1,2);
% для 2 неравенства:
x1_2=sys2(1,3)/sys2(1,1);
x2_2=sys2(1,3)/sys2(1,2);
% для 3 неравенства:
x1_3=sys3(1,3)/sys3(1,1);
x2_3=sys3(1,3)/sys3(1,2);

% отображение расчетов:
fprintf('\nРасчет для построения графика:\n')
fprintf('\nРезультат расчетов для неравенства №1:%2.3f ',x1_1,x2_1) % фразу начните со слов "'Результат расчетов для неравенства №1:"
fprintf('\nРезультат расчетов для неравенства №2:%2.3f',x1_2,x2_2) % фразу начните со слов "'Результат расчетов для неравенства №2:"
fprintf('\nРезультат расчетов для неравенства №3:%2.3f',x1_3,x2_3) % фразу начните со слов "'Результат расчетов для неравенства №3:"
% -----------------
% ---- Расчеты для построение графика -------
% area
% решим систему неравенств
X1min=min([x1_1,x1_2,x1_3]); % Находим минимальное значение на каждой из осей (точки на осях). для обоих минимумов нужно реализовать нахождение в одну строку.
X2min=min([x2_1,x2_2,x2_3]);

%  -- Для точек пересечения линий

% расчет точке пересечения линий для систем 1 и 2
A_sys1_2=[sys1(1,1),sys1(1,2);sys2(1,1),sys2(1,2)]; % матрица, содержащая коэфициенты при двух иксах для неравенств 1 и 2 системы
B_sys1_2=[sys1(1,3);sys2(1,3)]; % матрица, содержащая числа правой части неравенств
Y_sys1_2=inv(A_sys1_2)*(B_sys1_2); % решение системы (нахождение точек пересечения)

% расчет точке пересечения линий для систем 1 и 3
A_sys1_3=[sys1(1,1),sys1(1,2);sys3(1,1),sys3(1,2)]; 
B_sys1_3=[sys1(1,3);sys3(1,3)];
Y_sys1_3=inv(A_sys1_3)*(B_sys1_3);

% расчет точке пересечения линий для систем 2 и 3
A_sys2_3=[sys2(1,1),sys2(1,2);sys3(1,1),sys3(1,2)];
B_sys2_3=[sys2(1,3);sys3(1,3)];
Y_sys2_3=inv(A_sys2_3)*(B_sys2_3);


% % ---- построение графика оптимизации
area([0,Y_sys1_2(2),Y_sys2_3(2),x2_3],[x1_1,Y_sys1_2(1),Y_sys2_3(1),0]) % Изучите функцию и постройте ваш вариант ОДЗ
grid on
xlim([0 10])
ylim([0 19])
hold on

line([x2_1,0],[0,x1_1]) % изучите функцию и постройте линии для вашего варианта
line([x2_2,0],[0,x1_2])
line([x2_3,x2_3],[0,20])

plot([0,Y_sys1_2(2),Y_sys2_3(2),x2_3],[x1_1,Y_sys1_2(1),Y_sys2_3(1),0],'*') % изучите функцию и постройте все точки описывающие координаты ОДЗ в виде "о"
hold off

% Подпись точек целевой функции
text(Y_sys1_2(2),Y_sys1_2(1),'Y(B)')  % т. 'Y(B)'
text(Y_sys2_3(2),Y_sys2_3(1),'Y(C)')  % т. 'Y(C)'
text(x2_3,0,'Y(D)')  % т. 'Y(D)'

xlabel('X2')
ylabel('X1')

% % Точки целевой функции

% создадим точки X1 X2 для проверки целевой функции
X_A=[0,x1_1];  % т. 'Y(A)'
X_B=[Y_sys1_2(2),Y_sys1_2(1)];  % т. 'Y(B)'
X_C=[Y_sys2_3(2),Y_sys2_3(1)];  % т. 'Y(C)'
X_D=[x2_3,0];  % т. 'Y(D)'

% целевая функция 
Y_A=sum(X_A.*[A,B]) ;
Y_B=sum(X_B.*[A,B]) ;
Y_C=sum(X_C.*[A,B]) ;
Y_D=sum(X_D.*[A,B]) ;

Ymax=max([Y_A,Y_B,Y_C,Y_D]) ; % максимальное значение целевой функции
% определение точки максимума целевой функции

if Ymax == Y_A
ansv='A';
x1 = 0;
x2 = x1_1;
elseif Ymax == Y_B
ansv='B';
x1 = Y_sys1_2(2);
x2 = Y_sys1_2(1);
elseif Ymax == Y_C
ansv='C';
x1 = Y_sys2_3(2);
x2 = Y_sys2_3(1);
elseif Ymax == Y_D
ansv='D';
x1 = x2_3;
x2 = 0;
end
Ansver=['Ответ: Функция цели принимает значение  в т.(',ansv,'): y(',ansv,')=',num2str(A),'*',num2str(x1),'+',num2str(B),'*',num2str(x2),]; % Заполните строчку ответа самтостоятельно
disp(Ansver)
disp(['Остаточний варіант рівняння матеме вигляд y(',ansv,')=A*x1 +B*x2'])
% fprintf('Ответ:\nФункция цели принимает значение в т.(%s): \n y(%s) =%1.0f*%1.2+%1.0f*%1.2 \n',ansf,ansf,A,x1,B,x2)
% ------------------------------